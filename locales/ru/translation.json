{
  "name": "Сергей Панков",
  "post": "Фронтенд разработчик",
  "aboutMe": "Обомне",
  "projects": "Проекты",
  "contacts": "Контакты",
  "downloadCv": "Загрузить резюме",
  "myProjects": " Мои проекты",
  "allMyStack": "Весь мой стек:",
  "worksInPortfolio": "Работы в моем портфолио:",
  "aboutMeText": "Frontend разработчик с 2 годами опыта, в том числе коммерческого.  Специализируюсь на разработке пользовательских интерфейсов с использованием JavaScript, TypeScript, React. Так же есть опыт в адаптивной кросс-браузерной верстке SPA и MPA с использованием CSS, SCSS, GSAP, GULP. Глубоко увлечен информационными технологиями и их влиянием на современный мир, именно поэтому хочу активно вносить свой вклад в этот процесс",
  "all": "Все",
  "stack": "Стек:",
  "contactMe": "Свяжитесь со мной с помощью:",
  "checkMyRepo": "Вы можете посмотреть мой репозиторий:",
  "ecars": "Ecars это мой самый большой и сложный проект. На его создание у меня ушло около полу года. В нем используются все технологии, которые в данный момент востребованы на рынке: React, TypeScript, React Router, Redux Toolkit, SCSS Module, Firebase и многое другое. Ecars это, своего рода, агрегатора автомобилей. Любой пользователь может зайти на ecars-project.ru и посмотреть текущий ассортимент автомобилей. Реализованы фильтрация и сортировка на уровне запросов на бэкэнд. Так же любой пользователь может выставить на продажу свой автомобиль, необходима только регистрация по email, или вход через Google API или по коду из смс. Так же есть возможность отредактировать или полностью удалить свой выставленный автомобиль. Все данные хранятся в базе данных Firebase. В данный момент приложение полностью функционирует и выполняет все задуманные функции, полностью реализована верстка для десктопа и мобильных устройств, все промежуточные версии максимально упрощены.",
  "maze": "Мой первый большой и сложный проект, над которым я работал несколько месяцев. Мне была поставлена задача создать игру лабиринт, в которой будет реализовано управление стрелками на клавиатуре, рандомно создаваться стены, через которые невозможно пройти.  Самой большой проблемой, с которой мне пришлось столкнуться, была реализация стен. Они представляют собой top-border или left-border у div, которые генерируются рандомным числом.  Пришлось приложить не мало времени для того, чтобы вычислять положение стен и путей, по которым может двигаться пользователь. В конечном итоге, пусть и не самым лаконичным способом, но задача была решена.",
  "armstrongCss": "Тот же самый калькулятор для расчета потолка Armstrong, только реализованный без использования Canvas. Отрисосывает элементы td и красит их с помощью CSS.Преимущество данного калькулятора перед предыдущим, реализованным с помощью Canvas, заключается в скорости работы, и качестве отображения. Новая версия может отрисосывать больше комнату, делает это быстрее, и не размывает изображение как в Canvas версии.",
  "armstrongCanvas": "Armstrong Canvas Это калькулятор для расчета необходимого количества блоков Armstrong для покрытия потолка в комнатеПользователь вводит размеры комнаты, калькулятор высчитывает: Площадь комнаты, периметр комнаты, необходимое количество блоков 60x60 см, а также размер крайних блоков, которые придется обрезать. Так же, есть возможность рассчитать с учетом ширины шва между блоками.Самое главное достоинство калькулятора: Он наглядно отрисовывает в уменьшенном масштабе потолок комнаты в Canvas и показывает, как будут лежать на нем блоки Armstrong. Отображает как не от центровано, то есть обрезанные части блоков будут только с одной стороны, так и от центровав, чтобы все выглядело семерично.",
  "headphones": "Тренировочный проект для практики по верстке из макета Figma. Сверстан с помощью SCSS. Используются Flex, transition, animation. Адаптивен.",
  "passgen": "Тренировочный проект, который был сделан за 1 день. Первое знакомство с TypeScript и tailwind.Простой генератор паролей, имеющий некоторые настройки. Можно задать длину выдаваемого пароля, наличие/отсутствие заглавных символов, чисел, специальных символов. Возможность быстрого копирования результата по клику на пароле.",
  "recording": "Тренировочный проект по верстке по макету из Figma. Полностью адаптивный. Собран с помощью GULP. Использовался SCSS, Flex, Grid.",
  "likeMe": "Первый коммерческий проект. Был дан макет в Figma простого лэндинга, без планшетной и мобильной версии. Нужно было сверстать и адаптировать за 1 день. Задачу выполнил в срок, заказчик остался доволен.",
  "araney": "Один из первых коммерческих проектов. Хороший дизайн с Figma но без мобильной и планшетной версии, поэтому пришлось импровизировать. Самая большая сложность заключалась в блоке “Как мы работаем”. При скроле пользователем страницы, когда блок “Как мы работаем” достигает Header блок должен скролится в сторону, когда он доходит до конца, продолжается обычный скролл страницы. Соответственно при скроле вверх, этот блок тоже должен был прокрутиться в другую сторону, прежде чем страница продолжит скролиться вверх.Задачу выполнил, заказчик работу принял.",
  "rilab": "Очередной заказ, который состоял по большей мере из верстки. На этот раз была задача с шаблона для WordPress забрать некоторые блоки с анимацией, и вставить в лэндинг услуг по восстановлению данных с жесткого диска. Заказчик работу принял.",
  "kema": "Один из самых объёмных заказов. Задача состояла в верстке одной из страниц на сайте, которая объясняла преимущества ее онлайн зала. В начале четкого макета и дизайна не было, были только примеры с других иностранных сайтов как заказчице хотелось бы видеть свою страницу. При попытке сборки одной страницы из “заимствованных” нескольких написанных на разных фреймворках, столкнулся с множеством багов, ошибок и конфликтов стилей и скриптов.  В итоге было принято решение писать самостоятельно те страницы, которые отказывались работать, пользуясь библиотекой GSAP для создания анимаций.Заказ был сдан позже обещанного, но это в процессе работы обговаривалось с заказчиком. Заказчик полностью доволен работой, все пожелания были выполнены."
}
